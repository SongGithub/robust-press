{{- $config := (datasource "config") -}}
---
AWSTemplateFormatVersion:  "2010-09-09"
Description: "This stack holds bastion setup, including ASG"

Resources:
  # assume that VPC has been created and essential values exported
  BastionASG:
    Type: "AWS::AutoScaling::AutoScalingGroup"
    Properties:
      AutoScalingGroupName: !Sub bastion.{{ $config.global.environmentName}}
      AvailabilityZones:
        Fn::GetAZs:
          Ref: "AWS::Region"
      LaunchConfigurationName: !Ref BastionLaunchConfiguration
      HealthCheckType: EC2
      HealthCheckGracePeriod: 500
      DesiredCapacity: 0
      MinSize: 0
      MaxSize: 1
      Tags:
        - Key: Name
          Value: !Sub bastion.{{ $config.global.environmentName}}
          PropagateAtLaunch: true
      TerminationPolicies:
        - OldestInstance
      VPCZoneIdentifier:
        Fn::Split:
          - ','
          - Fn::ImportValue:
              Fn::Sub: PublicSubnets-{{ $config.global.environmentName}}

  BastionLaunchConfiguration:
    Type: "AWS::AutoScaling::LaunchConfiguration"
    Metadata:
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              awslogs: []
          files:
            /etc/awslogs/awscli.conf:
              content: !Sub |
                [default]
                region = ${AWS::Region}
                [plugins]
                cwlogs = cwlogs
              mode: '000644'
              owner: root
              group: root
            /etc/awslogs/awscli.conf:
              content: !Sub |
                [default]
                region = ${AWS::Region}
                [plugins]
                cwlogs = cwlogs
              mode: '000644'
              owner: root
              group: root
            /etc/awslogs/awslogs.conf:
              content: !Sub |
                [general]
                state_file = /var/lib/awslogs/agent-state
                [/var/log/messages]
                datetime_format = %b %d %H:%M:%S
                file = /var/log/messages
                buffer_duration = 5000
                log_stream_name = {instance_id}/var/log/messages
                initial_position = start_of_file
                log_group_name = ${BastionLogGroup}
                [/var/log/secure]
                datetime_format = %b %d %H:%M:%S
                file = /var/log/secure
                log_stream_name = {instance_id}/var/log/secure
                log_group_name = ${BastionLogGroup}
                initial_position = start_of_file
              mode: '000644'
              owner: root
              group: root
          services:
            sysvinit:
              awslogsd:
                enabled: true
                ensureRunning: true
                packages:
                  yum:
                  - awslogs
                files:
                - '/etc/awslogs/awslogs.conf'
                - '/etc/awslogs/awscli.conf'

    Properties:
      KeyName: {{ $config.bastion.bastionSSHKeyName }}
      ImageId: {{ $config.bastion.bastionAmiID }}
      InstanceType: {{ $config.bastion.instanceType }}
      IamInstanceProfile: !Ref BastionProfile
      SecurityGroups:
      - Fn::ImportValue:
          BastionSecurityGroup-{{ $config.global.environmentName}}
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash -xe
          yum update -y aws-cfn-bootstrap

          # Start cfn-init
          /opt/aws/bin/cfn-init -v --region ${AWS::Region} --stack ${AWS::StackName} --resource BastionLaunchConfiguration || error_exit 'Failed to run cfn-init'

          # signal success
          /opt/aws/bin/cfn-signal -e 0 --region ${AWS::Region} --stack ${AWS::StackName} --resource BastionASG

  BastionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName : !Sub bastion-{{ $config.global.environmentName}}
      RetentionInDays: 7

  BastionProfile:
    Type: 'AWS::IAM::InstanceProfile'
    Properties:
      Path: '/'
      Roles:
      - !Ref BastionIAMRole

  BastionIAMRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - 'ec2.amazonaws.com'
          Action:
          - 'sts:AssumeRole'
      Path: '/'
      Policies:
      - PolicyName: logs
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
            - logs:Describe*
            Resource:
            - arn:aws:logs:*:*:*

  ScheduledActionDown:
    Type: AWS::AutoScaling::ScheduledAction
    Properties:
      AutoScalingGroupName: !Ref BastionASG
      DesiredCapacity: 0
      MinSize: 0
      MaxSize: 1
      Recurrence: "0 7 * * *"
